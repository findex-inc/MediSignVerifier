//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediSignVerifier.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SignatureVerifier.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;Document xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; id=&quot;Document&quot; xsi:noNamespaceSchemaLocation=&quot;ED.xsd&quot;&gt;
        ///	&lt;DispensingManagement id=&quot;DispensingManagement&quot;&gt;
        ///		&lt;Version Value=&quot;EPD1.0&quot;/&gt;
        ///	&lt;DispensingId Value=&quot;024d68dd-074f-4442-8fee-7d8c6c952afd&quot; /&gt;&lt;/DispensingManagement&gt;
        ///	&lt;Dispensing id=&quot;Dispensing&quot;&gt;
        ///		&lt;ReferencePrescription&gt;
        ///			&lt;PrescriptionManagement id=&quot;PrescriptionManagement&quot;&gt;&lt;Version Value=&quot;EPS1.0&quot;/&gt;&lt;PrescriptionId Value=&quot;1439e0c5-7c1d-4512-861d-263 [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Dispensing_005_03 {
            get {
                return ResourceManager.GetString("Dispensing_005_03", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;Document xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; id=&quot;Document&quot; xsi:noNamespaceSchemaLocation=&quot;ED.xsd&quot;&gt;
        ///	&lt;DispensingManagement id=&quot;DispensingManagement&quot;&gt;
        ///		&lt;Version Value=&quot;EPD1.0&quot;/&gt;
        ///	&lt;DispensingId Value=&quot;5d2c5e65-513e-4be9-95f8-6168ea1506ea&quot; /&gt;&lt;/DispensingManagement&gt;
        ///	&lt;Dispensing id=&quot;Dispensing&quot;&gt;
        ///		&lt;ReferencePrescription&gt;
        ///			&lt;PrescriptionManagement id=&quot;PrescriptionManagement&quot;&gt;&lt;Version Value=&quot;EPS1.0&quot;/&gt;&lt;PrescriptionId Value=&quot;77b9c286-9787-4088-8b6c-41a [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Dispensing_ScanMixed {
            get {
                return ResourceManager.GetString("Dispensing_ScanMixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&lt;catalog&gt;
        ///   &lt;book id=&quot;bk101&quot;&gt;
        ///      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;
        ///      &lt;title&gt;XML Developer&apos;s Guide&lt;/title&gt;
        ///      &lt;genre&gt;Computer&lt;/genre&gt;
        ///      &lt;price&gt;44.95&lt;/price&gt;
        ///      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;
        ///      &lt;description&gt;An in-depth look at creating applications with XML.&lt;/description&gt;
        ///   &lt;/book&gt;
        ///&lt;ds:Signature xmlns:ds=&quot;http://www.w3.org/2000/09/xmldsig#&quot; Id=&quot;id-87e2bf766eec98931f81131c2cc7553d&quot;&gt;&lt;ds:SignedInfo&gt;&lt;ds:Canonicaliza [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Europe {
            get {
                return ResourceManager.GetString("Europe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;Document xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; id=&quot;Document&quot;
        ///  xsi:noNamespaceSchemaLocation=&quot;EP.xsd&quot;&gt;
        ///  &lt;Prescription&gt;
        ///    &lt;PrescriptionManagement id=&quot;PrescriptionManagement&quot;&gt;
        ///      &lt;Version Value=&quot;EPS1.0&quot; /&gt;
        ///    &lt;/PrescriptionManagement&gt;
        ///    &lt;PrescriptionDocument id=&quot;PrescriptionDocument&quot;&gt;
        ///      &lt;!-- test for SigningCertificateSignatureXmlTests. --&gt;
        ///    &lt;/PrescriptionDocument&gt;
        ///    &lt;PrescriptionSign&gt;
        ///      &lt;xs:Signature xmlns:xs=&quot;http://www [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FoundAtSigningCertificate {
            get {
                return ResourceManager.GetString("FoundAtSigningCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;Document xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; id=&quot;Document&quot;
        ///  xsi:noNamespaceSchemaLocation=&quot;EP.xsd&quot;&gt;
        ///  &lt;Prescription&gt;
        ///    &lt;PrescriptionManagement id=&quot;PrescriptionManagement&quot;&gt;
        ///      &lt;Version Value=&quot;EPS1.0&quot; /&gt;
        ///    &lt;/PrescriptionManagement&gt;
        ///    &lt;PrescriptionDocument id=&quot;PrescriptionDocument&quot;&gt;
        ///      &lt;!-- test for SigningCertificateSignatureXmlTests. --&gt;
        ///    &lt;/PrescriptionDocument&gt;
        ///    &lt;PrescriptionSign&gt;
        ///      &lt;xs:Signature xmlns:xs=&quot;http://www [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FoundAtSigningCertificateV2 {
            get {
                return ResourceManager.GetString("FoundAtSigningCertificateV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;Document xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; id=&quot;Document&quot;
        ///  xsi:noNamespaceSchemaLocation=&quot;EP.xsd&quot;&gt;
        ///  &lt;Prescription&gt;
        ///    &lt;PrescriptionManagement id=&quot;PrescriptionManagement&quot;&gt;
        ///      &lt;Version Value=&quot;EPS1.0&quot; /&gt;
        ///    &lt;/PrescriptionManagement&gt;
        ///    &lt;PrescriptionDocument id=&quot;PrescriptionDocument&quot;&gt;
        ///      &lt;!-- test for SigningCertificateSignatureXmlTests. --&gt;
        ///    &lt;/PrescriptionDocument&gt;
        ///    &lt;PrescriptionSign&gt;
        ///      &lt;xs:Signature xmlns:xs=&quot;http://www [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FoundAtX509Certificate {
            get {
                return ResourceManager.GetString("FoundAtX509Certificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;Document xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; id=&quot;Document&quot;
        ///  xsi:noNamespaceSchemaLocation=&quot;EP.xsd&quot;&gt;
        ///  &lt;Prescription&gt;
        ///    &lt;PrescriptionManagement id=&quot;PrescriptionManagement&quot;&gt;
        ///      &lt;Version Value=&quot;EPS1.0&quot; /&gt;
        ///    &lt;/PrescriptionManagement&gt;
        ///    &lt;PrescriptionDocument id=&quot;PrescriptionDocument&quot;&gt;
        ///      &lt;!-- test for SigningCertificateSignatureXmlTests. --&gt;
        ///    &lt;/PrescriptionDocument&gt;
        ///    &lt;PrescriptionSign&gt;
        ///      &lt;xs:Signature xmlns:xs=&quot;http://www [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FoundAtX509IssuerSerial {
            get {
                return ResourceManager.GetString("FoundAtX509IssuerSerial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;Document xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; id=&quot;Document&quot;
        ///  xsi:noNamespaceSchemaLocation=&quot;EP.xsd&quot;&gt;
        ///  &lt;Prescription&gt;
        ///    &lt;PrescriptionManagement id=&quot;PrescriptionManagement&quot;&gt;
        ///      &lt;Version Value=&quot;EPS1.0&quot; /&gt;
        ///    &lt;/PrescriptionManagement&gt;
        ///    &lt;PrescriptionDocument id=&quot;PrescriptionDocument&quot;&gt;
        ///      &lt;!-- test for SigningCertificateSignatureXmlTests. --&gt;
        ///    &lt;/PrescriptionDocument&gt;
        ///    &lt;PrescriptionSign&gt;
        ///      &lt;xs:Signature xmlns:xs=&quot;http://www [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotFoundAnywhere {
            get {
                return ResourceManager.GetString("NotFoundAnywhere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;Directives xmlns=&quot;http://schemas.microsoft.com/netfx/2013/01/metadata&quot;&gt;
        ///  &lt;Library&gt;
        ///
        ///    &lt;!-- These types are loaded through CryptoConfig --&gt;
        ///    &lt;Type Name=&quot;System.Security.Cryptography.RSAPKCS1SignatureFormatter&quot; Dynamic=&quot;Required Public&quot; /&gt;
        ///    &lt;Type Name=&quot;System.Security.Cryptography.RSAPKCS1SignatureDeformatter&quot; Dynamic=&quot;Required Public&quot; /&gt;
        ///    &lt;Type Name=&quot;System.Security.Cryptography.DSASignatureFormatter&quot; Dynamic=&quot;Required Public&quot; /&gt;
        ///    &lt;Type Name=&quot;System.Security.Cryptography.DSASignatureDe [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotFoundSignature {
            get {
                return ResourceManager.GetString("NotFoundSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;Document xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; id=&quot;Document&quot; xsi:noNamespaceSchemaLocation=&quot;EP.xsd&quot;&gt;&lt;Prescription&gt;&lt;PrescriptionManagement id=&quot;PrescriptionManagement&quot;&gt;&lt;Version Value=&quot;EPS1.0&quot;/&gt;&lt;PrescriptionId Value=&quot;1439e0c5-7c1d-4512-861d-263de48417bf&quot; /&gt;&lt;/PrescriptionManagement&gt;&lt;PrescriptionDocument id=&quot;PrescriptionDocument&quot;&gt;U0oxCjEsMSw4MDAwMDEwLDk5LOaknOiovOeUqOeXhemZogoyLDg1Mi04MTU0LOmVt+W0juecjOmVt+W0juW4ggozLDAzLTM3NzUtMzExMSwwMy0zNzc1LTMxMTIs44Gd44 [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Prescription_004_01 {
            get {
                return ResourceManager.GetString("Prescription_004_01", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;Signature Id=&quot;Id&quot; xmlns=&quot;http://www.w3.org/2000/09/xmldsig#&quot;&gt;&lt;SignedInfo Id=&quot;Id-Si-3&quot;&gt;&lt;CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; /&gt;&lt;SignatureMethod Algorithm=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot; /&gt;&lt;Reference Id=&quot;Id-Ref-2&quot; URI=&quot;#Id-Manifest-1&quot; Type=&quot;http://www.w3.org/2000/09/xmldsig#Manifest&quot;&gt;&lt;Transforms&gt;&lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; /&gt;&lt;/Transforms&gt;&lt;DigestMethod Algorithm=&quot;h [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Scan_20170511154438586_ESXLA {
            get {
                return ResourceManager.GetString("Scan_20170511154438586_ESXLA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;Signature Id=&quot;Id&quot; xmlns=&quot;http://www.w3.org/2000/09/xmldsig#&quot;&gt;&lt;SignedInfo Id=&quot;Id-Si-3&quot;&gt;&lt;CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; /&gt;&lt;SignatureMethod Algorithm=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot; /&gt;&lt;Reference Id=&quot;Id-Ref-2&quot; URI=&quot;#Id-Manifest-1&quot; Type=&quot;http://www.w3.org/2000/09/xmldsig#Manifest&quot;&gt;&lt;Transforms&gt;&lt;Transform Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot; /&gt;&lt;/Transforms&gt;&lt;DigestMethod Algorithm=&quot;h [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Scan_20190207203737336_ESXLA {
            get {
                return ResourceManager.GetString("Scan_20190207203737336_ESXLA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {
        ///  &quot;検証ファイル名&quot;: &quot;C:\\FINDEX\\リモート署名\\タイムスタンプ付\\EP-VT6-005_06_調剤ATS付.xml&quot;,
        ///  &quot;レポート作成時刻&quot;: &quot;2023-03-17T16:49:06.1105455+09:00&quot;,
        ///  &quot;検証時刻&quot;: &quot;2023-03-17T16:49:05.4887808+09:00&quot;,
        ///  &quot;検証結果&quot;: &quot;INVALID&quot;,
        ///  &quot;検証結果メッセージ&quot;: &quot;署名検証に失敗しました。&quot;,
        ///  &quot;電子処方箋種別&quot;: &quot;Dispensing&quot;,
        ///  &quot;署名リスト&quot;: [
        ///    {
        ///      &quot;署名No&quot;: 1,
        ///      &quot;署名種別&quot;: &quot;DispPrescription&quot;,
        ///      &quot;署名フォーマット&quot;: &quot;XL&quot;,
        ///      &quot;パス&quot;: &quot;/Document/Dispensing/ReferencePrescription/PrescriptionSign/xs:Signature&quot;,
        ///      &quot;署名構造&quot;: {
        ///        &quot;検証結果&quot;: &quot;VALID&quot;,
        ///        &quot;検証結果詳細&quot;: [
        ///    [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SummaryReportForDefault {
            get {
                return ResourceManager.GetString("SummaryReportForDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {
        ///  &quot;検証ファイル名&quot;: &quot;C:\\FINDEX\\リモート署名\\タイムスタンプ付\\EP-VT6-005_06_調剤ATS付.xml&quot;,
        ///  &quot;レポート作成時刻&quot;: &quot;2023-03-17T16:49:06.1105455+09:00&quot;,
        ///  &quot;検証時刻&quot;: &quot;2023-03-17T16:49:05.4887808+09:00&quot;,
        ///  &quot;検証結果&quot;: &quot;INVALID&quot;,
        ///  &quot;検証結果メッセージ&quot;: &quot;署名検証に失敗しました。&quot;,
        ///  &quot;電子処方箋種別&quot;: &quot;Dispensing&quot;,
        ///  &quot;署名リスト&quot;: [
        ///    {
        ///      &quot;署名No&quot;: 1,
        ///      &quot;署名種別&quot;: &quot;DispPrescription&quot;,
        ///      &quot;署名フォーマット&quot;: &quot;XL&quot;,
        ///      &quot;パス&quot;: &quot;/Document/Dispensing/ReferencePrescription/PrescriptionSign/xs:Signature&quot;,
        ///      &quot;署名構造&quot;: {
        ///        &quot;検証結果&quot;: &quot;VALID&quot;
        ///      },
        ///      &quot;署名者証明書&quot;: [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SummaryReportForDefaultExpected {
            get {
                return ResourceManager.GetString("SummaryReportForDefaultExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   型 System.Byte[] のローカライズされたリソースを検索します。
        /// </summary>
        internal static byte[] TestCA1 {
            get {
                object obj = ResourceManager.GetObject("TestCA1", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Byte[] のローカライズされたリソースを検索します。
        /// </summary>
        internal static byte[] TestTSACA1 {
            get {
                object obj = ResourceManager.GetObject("TestTSACA1", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;Document xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; id=&quot;Document&quot;
        ///  xsi:noNamespaceSchemaLocation=&quot;EP.xsd&quot;&gt;
        ///  &lt;Prescription&gt;
        ///    &lt;PrescriptionManagement id=&quot;PrescriptionManagement&quot;&gt;
        ///      &lt;Version Value=&quot;EPS1.0&quot; /&gt;
        ///    &lt;/PrescriptionManagement&gt;
        ///    &lt;PrescriptionDocument id=&quot;PrescriptionDocument&quot;&gt;
        ///      &lt;!-- test for SigningCertificateSignatureXmlTests. --&gt;
        ///    &lt;/PrescriptionDocument&gt;
        ///    &lt;PrescriptionSign&gt;
        ///      &lt;xs:Signature xmlns:xs=&quot;http://www [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string UnmatchReferenceKeyInfo {
            get {
                return ResourceManager.GetString("UnmatchReferenceKeyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;Document xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; id=&quot;Document&quot;
        ///  xsi:noNamespaceSchemaLocation=&quot;EP.xsd&quot;&gt;
        ///  &lt;Prescription&gt;
        ///    &lt;PrescriptionManagement id=&quot;PrescriptionManagement&quot;&gt;
        ///      &lt;Version Value=&quot;EPS1.0&quot; /&gt;
        ///    &lt;/PrescriptionManagement&gt;
        ///    &lt;PrescriptionDocument id=&quot;PrescriptionDocument&quot;&gt;
        ///      &lt;!-- test for SigningCertificateSignatureXmlTests. --&gt;
        ///    &lt;/PrescriptionDocument&gt;
        ///    &lt;PrescriptionSign&gt;
        ///      &lt;xs:Signature xmlns:xs=&quot;http://www [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string UnsupportedKeyInfo {
            get {
                return ResourceManager.GetString("UnsupportedKeyInfo", resourceCulture);
            }
        }
    }
}
